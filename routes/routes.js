const express = require('express')
const router = express.Router()
// import  controller
const usersControllers = require('../controllers/usersControllers')
const userTypesControllers = require('../controllers/userTypesControllers')
const userProfilesControllers = require('../controllers/userProfilesControllers')
const warehousesControllers = require('../controllers/warehousesControllers')
const sparePartsControllers = require('../controllers/sparePartsControllers')
const correctiveInspectionsControllers = require('../controllers/correctiveInspectionsControllers')
const correctiveActionsControllers = require('../controllers/correctiveActionsControllers')
const preventiveActionsControllers = require('../controllers/preventiveActionsControllers')
const allocationRulesControllers = require('../controllers/allocationRulesControllers')
const countriesControllers = require('../controllers/countriesControllers')
const citiesControllers = require('../controllers/citiesControllers')
const tiersControllers = require('../controllers/tiersControllers')
const neighbourhoodsControllers = require('../controllers/neighbourhoodsControllers')
const serviceTypesControllers = require('../controllers/serviceTypesControllers')
const suppliersControllers = require('../controllers/suppliersControllers')
const invoicesControllers = require('../controllers/invoicesControllers')
const operationActionsControllers = require('../controllers/operationActionsControllers')
const operationInspectionsControllers = require('../controllers/operationInspectionsControllers')
const operationSparePartsControllers = require('../controllers/operationSparePartsControllers')

const storesControllers = require('../controllers/storesControllers')
const cabinetsControllers = require('../controllers/cabinetsControllers')
const priceRulesControllers = require('../controllers/priceRulesControllers')
const financialsControllers = require('../controllers/financialsControllers')
const fridgesTypesControllers = require('../controllers/fridgesTypesControllers')
const operationsControllers = require('../controllers/operationsControllers')
const liveOperationsControllers = require('../controllers/liveOperationsControllers')
const operationHistoriesControllers = require('../controllers/operationHistoriesControllers')

const neighbourhoodAliasControllers = require('../controllers/neighbourhoodAliasControllers')
const clientsControllers = require('../controllers/clientsControllers')

router.get("/clients", clientsControllers.clientsList)
router.get("/clients/:id", clientsControllers.clientDetails)
router.post("/clients", clientsControllers.clientAdd)
router.put("/clients/:id", clientsControllers.clientUpdate)
router.put("/clients/img/:id", clientsControllers.clientUpdateImg)
router.delete("/clients/:ids", clientsControllers.clientDelete)
router.put("/clientLegals/:clientId", clientsControllers.clientLegalAdd)
router.delete("/clientLegals/:clientId/:clientLegalId", clientsControllers.clientLegalDelete)
router.delete("/clientContacts/:clientId/:clientContactId", clientsControllers.clientContactDelete)
router.put("/clientContacts/:clientId", clientsControllers.clientContactAdd)

router.get("/clientsRenameCompanyToName", clientsControllers.clientsRenameCompanyToName)

//Users Routes
router.get("/users", usersControllers.usersList)
router.get("/users/:id", usersControllers.userDetails)
router.get("/users/type/:typeId", usersControllers.userTypeDetails)
router.post("/users", usersControllers.userAdd)
router.put("/users/:id", usersControllers.userUpdate)
router.delete("/users/:ids", usersControllers.userDelete)

router.get("/userType", userTypesControllers.userTypesList)
router.post("/userType", userTypesControllers.userTypeAdd)
router.delete("/userType/:ids", userTypesControllers.userTypeDelete)

router.get("/userProfile", userProfilesControllers.userProfilesList)
router.get("/userProfile/:id", userProfilesControllers.userProfileDetails)
router.post("/userProfile", userProfilesControllers.userProfileAdd)
router.put("/userProfile/:id", userProfilesControllers.userProfileUpdate)
router.delete("/userProfile/:ids", userProfilesControllers.userProfileDelete)

router.get("/userProfile/privilege/:userProfileId", userProfilesControllers.userProfilePrivilegeList)
router.post("/userProfile/privilege/:userProfileId", userProfilesControllers.userProfilePrivilegeAdd)
router.put("/userProfile/privilege/:userProfileId/:pageId", userProfilesControllers.userProfilePrivilegeUpdate)
router.delete("/userProfile/privilege/:userProfileId/:pageId", userProfilesControllers.userProfilePrivilegeDelete)


router.get("/warehouses", warehousesControllers.warehousesList)
router.get("/warehouses/:id", warehousesControllers.warehouseDetails)
router.post("/warehouses", warehousesControllers.warehouseAdd)
router.put("/warehouses/:id", warehousesControllers.warehouseUpdate)
router.delete("/warehouses/:ids", warehousesControllers.warehouseDelete)

router.get("/allocationRules", allocationRulesControllers.allocationRulesList)
router.get("/allocationRules/filterTop", allocationRulesControllers.allocationRulesFilterTop)
router.get("/allocationRules/:id", allocationRulesControllers.allocationRuleDetails)
router.post("/allocationRules", allocationRulesControllers.allocationRuleAdd)
router.put("/allocationRules/:id", allocationRulesControllers.allocationRuleUpdate)
router.delete("/allocationRules/:ids", allocationRulesControllers.allocationRuleDelete)

router.get("/allocationRules/city/:cityName", allocationRulesControllers.allocationRuleFromCity)
router.get("/allocationRules/neighbourhood/:neighbourhoodName", allocationRulesControllers.allocationRuleFromNeighbourhood)
router.get("/allocationRules/client/:clientName", allocationRulesControllers.allocationRuleFromClient)
router.get("/allocationRules/operation/:operationName", allocationRulesControllers.allocationRuleFromOperation)

router.get("/allocationRulesCities/:allocationRuleId", allocationRulesControllers.allocationRuleCitiesList)
router.delete("/allocationRulesCities/:allocationRuleId/:allocationRuleCitiesId", allocationRulesControllers.allocationRuleCitiesDelete)
router.get("/allocationRulesNeighbourhoods/:allocationRuleId", allocationRulesControllers.allocationRuleNeighbourhoodsList)
router.delete("/allocationRulesNeighbourhoods/:allocationRuleId/:allocationRuleNeighbourhoodsId", allocationRulesControllers.allocationRuleNeighbourhoodsDelete)
router.get("/allocationRulesCustomers/:allocationRuleId", allocationRulesControllers.allocationRuleCustomersList)
router.delete("/allocationRulesCustomers/:allocationRuleId/:allocationRuleCustomersId", allocationRulesControllers.allocationRuleCustomersDelete)
router.get("/allocationRulesOperations/:allocationRuleId", allocationRulesControllers.allocationRuleOperationsList)
router.delete("/allocationRulesOperations/:allocationRuleId/:allocationRuleOperationsId", allocationRulesControllers.allocationRuleOperationsDelete)

router.get("/countries", countriesControllers.countriesList)
router.get("/countries/:id", countriesControllers.countryDetails)
router.post("/countries", countriesControllers.countryAdd)
router.put("/countries/:id", countriesControllers.countryUpdate)
router.delete("/countries/:ids", countriesControllers.countryDelete)

router.get("/cities", citiesControllers.citiesList)
router.get("/cities/:id", citiesControllers.cityDetails)
router.post("/cities", citiesControllers.cityAdd)
router.put("/cities/:id", citiesControllers.cityUpdate)
router.delete("/cities/:ids", citiesControllers.cityDelete)
router.get("/cityAlias/:cityId", citiesControllers.cityAliasList)
//router.post("/cityAlias/:cityId", citiesControllers.cityAliasAdd)
router.delete("/cityAlias/:cityId/:cityAliasName", citiesControllers.cityAliasDelete)
router.get("/cities/neighbourhoods/:cityId/:neighbourhoodId", citiesControllers.cityNeighbourhoodDetails)

router.get("/tiers", tiersControllers.tiersList)
router.get("/tiers/:id", tiersControllers.tierDetails)
router.post("/tiers", tiersControllers.tierAdd)
router.put("/tiers/:id", tiersControllers.tierUpdate)
router.delete("/tiers/:ids", tiersControllers.tierDelete)

router.get("/tierCity/:tierId", tiersControllers.tierCityList)
router.delete("/tierCity/:tierId/:tierCityId", tiersControllers.tierCityDelete)
router.put("/tierCity/:tierId", tiersControllers.tierCityAdd)

router.get("/neighbourhoods", neighbourhoodsControllers.neighbourhoodsList)
router.get("/neighbourhoods/:id", neighbourhoodsControllers.neighbourhoodDetails)
router.post("/neighbourhoods", neighbourhoodsControllers.neighbourhoodAdd)
router.put("/neighbourhoods/:id", neighbourhoodsControllers.neighbourhoodUpdate)
router.delete("/neighbourhoods/:ids", neighbourhoodsControllers.neighbourhoodDelete)
router.get("/neighbourhoodAlias/:neighbourhoodId", neighbourhoodsControllers.neighbourhoodAliasList)
//router.post("/neighbourhoodAlias/:neighbourhoodId", citiesControllers.neighbourhoodAliasAdd)
router.delete("/neighbourhoodAlias/:neighbourhoodId/:neighbourhoodAliasId", neighbourhoodsControllers.neighbourhoodAliasDelete)


router.get("/serviceTypes", serviceTypesControllers.serviceTypesList)
router.get("/serviceTypes/:id", serviceTypesControllers.serviceTypeDetails)
router.post("/serviceTypes", serviceTypesControllers.serviceTypeAdd)
router.put("/serviceTypes/:id", serviceTypesControllers.serviceTypeUpdate)
router.delete("/serviceTypes/:ids", serviceTypesControllers.serviceTypeDelete)

router.get("/suppliers", suppliersControllers.suppliersList)
router.get("/suppliers/:id", suppliersControllers.supplierDetails)
router.post("/suppliers", suppliersControllers.supplierAdd)
router.put("/suppliers/:id", suppliersControllers.supplierUpdate)
router.delete("/suppliers/:ids", suppliersControllers.supplierDelete)

router.get("/stores", storesControllers.storesList)
router.get("/stores/:id", storesControllers.storeDetails)
router.post("/stores", storesControllers.storeAdd)
router.put("/stores/:id", storesControllers.storeUpdate)
router.delete("/stores/:ids", storesControllers.storeDelete)

router.get("/cabinets", cabinetsControllers.cabinetsList)
router.get("/cabinets/export", cabinetsControllers.cabinetsListToExport)
router.get("/cabinets/:id", cabinetsControllers.cabinetDetails)
router.get("/cabinets/bySn/:sn", cabinetsControllers.cabinetDetailsBySn)
router.put("/cabinets/bySn/:sn", cabinetsControllers.cabinetUpdateBySn)
router.post("/cabinets", cabinetsControllers.cabinetAdd)
router.put("/cabinets/:id", cabinetsControllers.cabinetUpdate)
router.delete("/cabinets/:ids", cabinetsControllers.cabinetDelete)

router.get("/financial", financialsControllers.financialsList)
router.get("/financials/export", financialsControllers.financialsListToExport)
router.get("/financial/byJobNumber/:jobNumber", financialsControllers.financialDetailsByJobNumber)
router.get("/financial/byOperationNumber/:operationNumber", financialsControllers.financialDetailsByOperationNumber)
router.get("/financial/bySn/:sn", financialsControllers.financialDetailsBySn)
router.get("/financial/daily", financialsControllers.financialsListDaily)
router.get("/financial/:id", financialsControllers.financialDetails)
router.post("/financial", financialsControllers.financialAdd)
router.put("/financial/:id", financialsControllers.financialUpdate)
router.put("/financial/byOperationNumber/:operationNumber", financialsControllers.financialUpdateByOperationNumber)
router.delete("/financial/:ids", financialsControllers.financialDelete)

router.get("/priceRules", priceRulesControllers.priceRulesList)
router.get("/priceRules/filterTop", priceRulesControllers.priceRulesFilterTop)
router.get("/priceRules/:id", priceRulesControllers.priceRuleDetails)
router.post("/priceRules", priceRulesControllers.priceRuleAdd)
router.put("/priceRules/:id", priceRulesControllers.priceRuleUpdate)
router.delete("/priceRules/:ids", priceRulesControllers.priceRuleDelete)

router.get("/priceRules/cityIn/:cityName", priceRulesControllers.priceRuleFromCityIn)
router.get("/priceRules/cityOut/:cityName", priceRulesControllers.priceRuleFromCityOut)
router.get("/priceRules/cityInOut/:cityInName/:cityOutName", priceRulesControllers.priceRuleFromCityInOut)
router.get("/priceRules/priceRuleFromClient/:clientName", priceRulesControllers.priceRuleFromClient)

router.get("/priceRulesCustomers/:priceRuleId", priceRulesControllers.priceRuleCustomersList)
router.delete("/priceRulesCustomers/:priceRuleId/:priceRulesCustomersId", priceRulesControllers.priceRuleCustomersDelete)
router.get("/priceRulesCountries/:priceRuleId", priceRulesControllers.priceRuleCountriesList)
router.delete("/priceRulesCountries/:priceRuleId/:priceRulesCountriesId", priceRulesControllers.priceRuleCountriesDelete)
router.get("/priceRulesCitiesIn/:priceRuleId", priceRulesControllers.priceRuleCitiesInList)
router.delete("/priceRulesCitiesIn/:priceRuleId/:priceRulesCitiesInId", priceRulesControllers.priceRuleCitiesInDelete)
router.get("/priceRulesCitiesOut/:priceRuleId", priceRulesControllers.priceRuleCitiesOutList)
router.delete("/priceRulesCitiesOut/:priceRuleId/:priceRulesCitiesOutId", priceRulesControllers.priceRuleCitiesOutDelete)
router.get("/priceRulesNeighbourhoodsIn/:priceRuleId", priceRulesControllers.priceRuleNeighbourhoodsInList)
router.delete("/priceRulesNeighbourhoodsIn/:priceRuleId/:priceRulesNeighbourhoodsInId", priceRulesControllers.priceRuleNeighbourhoodsInDelete)
router.get("/priceRulesNeighbourhoodsOut/:priceRuleId", priceRulesControllers.priceRuleNeighbourhoodsOutList)
router.delete("/priceRulesNeighbourhoodsOut/:priceRuleId/:priceRulesNeighbourhoodsOutId", priceRulesControllers.priceRuleNeighbourhoodsOutDelete)
router.get("/priceRulesTiersIn/:priceRuleId", priceRulesControllers.priceRuleTiersInList)
router.delete("/priceRulesTiersIn/:priceRuleId/:priceRulesTiersInId", priceRulesControllers.priceRuleTiersInDelete)
router.get("/priceRulesTiersOut/:priceRuleId", priceRulesControllers.priceRuleTiersOutList)
router.delete("/priceRulesTiersOut/:priceRuleId/:priceRulesTiersOutId", priceRulesControllers.priceRuleTiersOutDelete)

router.get("/fridgesTypes", fridgesTypesControllers.fridgesTypesList)
router.get("/fridgesTypes/:id", fridgesTypesControllers.fridgesTypeDetails)
router.get("/fridgesTypes/bySn/:snId", fridgesTypesControllers.fridgesTypeDetailsBySn)
router.post("/fridgesTypes", fridgesTypesControllers.fridgesTypeAdd)
router.put("/fridgesTypes/:id", fridgesTypesControllers.fridgesTypeUpdate)
router.put("/fridgesTypes/img/:id", fridgesTypesControllers.fridgesTypeUpdateImg)
router.delete("/fridgesTypes/:ids", fridgesTypesControllers.fridgesTypeDelete)

router.get("/liveOperations", liveOperationsControllers.liveOperationsList)
router.get("/liveOperations/export", liveOperationsControllers.liveOperationsListToExport)
router.get("/liveOperations/count", liveOperationsControllers.liveOperationsTabsCount)
router.get("/liveOperations/:id", liveOperationsControllers.liveOperationDetails)

router.get("/liveOperations/byJobNumber/:jobNumber", liveOperationsControllers.liveOperationDetailsByJobNumber)
router.get("/liveOperations/bySn/:sn", liveOperationsControllers.liveOperationDetailsBySn)
router.get("/liveOperations/byOperationNumber/:operationNumber", liveOperationsControllers.liveOperationDetailsByOperationNumber)
router.post("/liveOperations", liveOperationsControllers.liveOperationAdd)
router.put("/liveOperations/:id", liveOperationsControllers.liveOperationUpdate)
router.delete("/liveOperations/:ids", liveOperationsControllers.liveOperationDelete)
router.get("/correctiveReport/:operationNumber", liveOperationsControllers.correctiveReport)

router.get("/operations/history", operationHistoriesControllers.operationHistoriesList)
router.get("/operations/history/:operationId", operationHistoriesControllers.operationHistoryDetails)
router.post("/operations/history", operationHistoriesControllers.operationHistoryAdd)
router.put("/operations/history/:id", operationHistoriesControllers.operationHistoryUpdate)
router.delete("/operations/history/:ids", operationHistoriesControllers.operationHistoryDelete)

router.get("/operations", operationsControllers.operationsList)
router.post("/operations", operationsControllers.operationAdd)
router.delete("/operations/:ids", operationsControllers.operationDelete)

router.get("/correctiveInspections", correctiveInspectionsControllers.correctiveInspectionsList)
router.get("/correctiveInspections/:id", correctiveInspectionsControllers.correctiveInspectionDetails)
router.post("/correctiveInspections", correctiveInspectionsControllers.correctiveInspectionAdd)
router.put("/correctiveInspections/:id", correctiveInspectionsControllers.correctiveInspectionUpdate)
router.delete("/correctiveInspections/:ids", correctiveInspectionsControllers.correctiveInspectionDelete)

router.get("/correctiveActions", correctiveActionsControllers.correctiveActionsList)
router.get("/correctiveActions/:id", correctiveActionsControllers.correctiveActionDetails)
router.post("/correctiveActions", correctiveActionsControllers.correctiveActionAdd)
router.put("/correctiveActions/:id", correctiveActionsControllers.correctiveActionUpdate)
router.delete("/correctiveActions/:ids", correctiveActionsControllers.correctiveActionDelete)

router.get("/spareParts", sparePartsControllers.sparePartsList)
router.get("/spareParts/:id", sparePartsControllers.sparePartDetails)
router.post("/spareParts", sparePartsControllers.sparePartAdd)
router.put("/spareParts/:id", sparePartsControllers.sparePartUpdate)
router.delete("/spareParts/:ids", sparePartsControllers.sparePartDelete)

router.get("/operationActions", operationActionsControllers.operationActionsList)
router.get("/operationActions/:id", operationActionsControllers.operationActionDetails)
router.get("/operationActions/byOperationId/:operationId", operationActionsControllers.operationActionbyOperationId)
router.post("/operationActions", operationActionsControllers.operationActionAdd)
router.put("/operationActions/:id", operationActionsControllers.operationActionUpdate)
router.delete("/operationActions/:ids", operationActionsControllers.operationActionDelete)

router.get("/operationInspections", operationInspectionsControllers.operationInspectionsList)
router.get("/operationInspections/:id", operationInspectionsControllers.operationInspectionDetails)
router.get("/operationInspections/byOperationId/:operationId", operationInspectionsControllers.operationInspectionbyOperationId)
router.post("/operationInspections", operationInspectionsControllers.operationInspectionAdd)
router.put("/operationInspections/:id", operationInspectionsControllers.operationInspectionUpdate)
router.delete("/operationInspections/:ids", operationInspectionsControllers.operationInspectionDelete)

router.get("/operationSpareParts", operationSparePartsControllers.operationSparePartsList)
router.get("/operationSpareParts/:id", operationSparePartsControllers.operationSparePartDetails)
router.get("/operationSpareParts/byOperationId/:operationId", operationSparePartsControllers.operationSparePartbyOperationId)
router.post("/operationSpareParts", operationSparePartsControllers.operationSparePartAdd)
router.put("/operationSpareParts/:id", operationSparePartsControllers.operationSparePartUpdate)
router.delete("/operationSpareParts/:ids", operationSparePartsControllers.operationSparePartDelete)

router.get("/preventiveActions", preventiveActionsControllers.preventiveActionsList)
router.get("/preventiveActions/:id", preventiveActionsControllers.preventiveActionDetails)
router.post("/preventiveActions", preventiveActionsControllers.preventiveActionAdd)
router.put("/preventiveActions/:id", preventiveActionsControllers.preventiveActionUpdate)
router.delete("/preventiveActions/:ids", preventiveActionsControllers.preventiveActionDelete)


router.get("/invoices", invoicesControllers.invoicesList)
router.get("/invoices/:id", invoicesControllers.invoiceDetails)
router.post("/invoices", invoicesControllers.invoiceAdd)
router.put("/invoices/:id", invoicesControllers.invoiceUpdate)
router.delete("/invoices/:ids", invoicesControllers.invoiceDelete)


module.exports = router